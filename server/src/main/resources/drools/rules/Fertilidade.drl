package drools.rules;

import br.edu.ifsc.adubacao.model.Diagnostico;

global br.edu.ifsc.adubacao.model.Diagnostico diagnostico;

dialect  "mvel"

rule "Diagnostico_teores_P_class_2_MB"
    when
        Diagnostico(classeArgila == 2, laudo.fosforoP <= 4)
    then
        diagnostico.setClasseFosforoP("Muito Baixo");
end

rule "Diagnostico_teores_P_class_2_B"
    when
        Diagnostico(classeArgila == 2, laudo.fosforoP >= 4.1 && laudo.fosforoP <= 8)
    then
        diagnostico.setClasseFosforoP("Baixo");
end

rule "Diagnostico_teores_P_class_2_M"
    when
        Diagnostico(classeArgila == 2, laudo.fosforoP >= 8.1 && laudo.fosforoP <= 12)
    then
        diagnostico.setClasseFosforoP("Médio");
end

rule "Diagnostico_teores_P_class_2_A"
    when
        Diagnostico(classeArgila == 2, laudo.fosforoP >= 12.1 && laudo.fosforoP <= 24)
    then
        diagnostico.setClasseFosforoP("Alto");
end

rule "Diagnostico_teores_P_class_2_MA"
    when
        Diagnostico(classeArgila == 2, laudo.fosforoP > 24)
    then
        diagnostico.setClasseFosforoP("Muito Alto");
end

rule "Diagnostico_teores_K_class_2_MB"
    when
        Diagnostico(classeCTC == "Muito Baixo", laudo.potassioK <= 30)
    then
        diagnostico.setClassePotassioK("Muito Baixo");
end

rule "Diagnostico_teores_K_class_2_B"
    when
        Diagnostico(classeCTC == "Baixo", laudo.potassioK >= 31 && laudo.potassioK <= 60)
    then
        diagnostico.setClassePotassioK("Baixo");
end

rule "Diagnostico_teores_K_class_2_M"
    when
        Diagnostico(classeCTC == "Médio", laudo.potassioK >= 61 && laudo.potassioK <= 90)
    then
        diagnostico.setClassePotassioK("Médio");
end

rule "Diagnostico_teores_K_class_2_A"
    when
        Diagnostico(classeCTC == "Alto", laudo.potassioK >= 91 && laudo.potassioK <= 180)
    then
        diagnostico.setClassePotassioK("Alto");
end

rule "Diagnostico_teores_K_class_2_MA"
   when
       Diagnostico(classeCTC == "Muito Alto", laudo.potassioK > 180)
   then
       diagnostico.setClassePotassioK("Muito Alto");
end

rule "Diagnostico_teores_Ca_B"
   when
       Diagnostico(laudo.calcioTrocavelCaTroc < 2)
   then
       diagnostico.setClasseCalcioCa("Baixo");
end

rule "Diagnostico_teores_Ca_M"
   when
       Diagnostico(laudo.calcioTrocavelCaTroc >= 2 && laudo.calcioTrocavelCaTroc <= 4)
   then
       diagnostico.setClasseCalcioCa("Médio");
end

rule "Diagnostico_teores_Ca_A"
   when
       Diagnostico(laudo.calcioTrocavelCaTroc > 4)
   then
       diagnostico.setClasseCalcioCa("Alto");
end

rule "Diagnostico_teores_Mg_B"
   when
       Diagnostico(laudo.magnesioTrocavelMgTroc < 0.5)
   then
       diagnostico.setClasseMagnesioMg("Baixo");
end

rule "Diagnostico_teores_Mg_M"
   when
       Diagnostico(laudo.magnesioTrocavelMgTroc >= 0.5 && laudo.magnesioTrocavelMgTroc <= 1)
   then
       diagnostico.setClasseMagnesioMg("Médio");
end

rule "Diagnostico_teores_Mg_A"
   when
       Diagnostico(laudo.magnesioTrocavelMgTroc > 1)
   then
       diagnostico.setClasseMagnesioMg("Alto");
end

rule "Diagnostico_quantidade_P_MB"
   when
       Diagnostico(classeFosforoP == "Muito Baixo")
   then
       diagnostico.setQuantidadeFosforoP(250);
end

rule "Diagnostico_quantidade_P_B"
   when
       Diagnostico(classeFosforoP == "Baixo")
   then
       diagnostico.setQuantidadeFosforoP(170);
end

rule "Diagnostico_quantidade_P_M"
   when
       Diagnostico(classeFosforoP == "Médio")
   then
       diagnostico.setQuantidadeFosforoP(130);
end

rule "Diagnostico_quantidade_P_A"
   when
       Diagnostico(classeFosforoP == "Alto")
   then
       diagnostico.setQuantidadeFosforoP(90);
end

rule "Diagnostico_quantidade_P_MA"
   when
       Diagnostico(classeFosforoP == "Muito Alto")
   then
       diagnostico.setQuantidadeFosforoP(0);
end

rule "Diagnostico_quantidade_K_MB"
   when
       Diagnostico(classePotassioK == "Muito Baixo")
   then
       diagnostico.setQuantidadePotassioK(150);
end

rule "Diagnostico_quantidade_K_B"
   when
       Diagnostico(classePotassioK == "Baixo")
   then
       diagnostico.setQuantidadePotassioK(90);
end

rule "Diagnostico_quantidade_K_M"
   when
       Diagnostico(classePotassioK == "Médio")
   then
       diagnostico.setQuantidadePotassioK(60);
end

rule "Diagnostico_quantidade_K_A"
   when
       Diagnostico(classePotassioK == "Alto")
   then
       diagnostico.setQuantidadePotassioK(30);
end

rule "Diagnostico_quantidade_K_MA"
   when
       Diagnostico(classePotassioK == "Muito Alto")
   then
       diagnostico.setQuantidadePotassioK(0);
end